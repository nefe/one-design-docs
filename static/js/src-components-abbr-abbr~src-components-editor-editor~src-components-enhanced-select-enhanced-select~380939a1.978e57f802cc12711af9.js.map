{"version":3,"sources":["webpack:///../src/react-docs/Highlight.tsx","webpack:///../src/react-docs/Playground.tsx"],"names":["highlight","code","H","highlightAuto","value","Highlight","props","react","className","dangerouslySetInnerHTML","__html","displayName","__docgenInfo","description","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error","State","codeExpand","copied","copyTooltipVisible","BasePlayground","state","handleCodeExpand","_this","setState","handleCodeCopied","onCopyTooltipVisibleChange","visible","React","_this$props","this","demo","style","__code","children","files","package.json","content","private","main","dependencies","split","reduce","acc","line","matches","match","react-dom","react-scripts-ts","antd","oned-react","scripts","start","build","test","eject","devDependencies","@types/jest","@types/node","@types/react","@types/react-dom","typescript","index.tsx","concat","index.html","str","_this$props2","__position","title","codeBoxClass","classNames","code-box","expand","highlightClass","highlight-wrapper","highlight-wrapper-expand","StatusBoundary_StatusBoundary","default","href","alt","src","onClick","key","action","method","target","type","JSON","stringify","getSanboxConfig","LZString","compressToBase64","replace","lib_default","a","text","onCopy","tooltip","onVisibleChange","icon","Highlight_Highlight","defaultProps","PlaygroundProps","_classCallCheck","components","__scope","Playground","withMDXComponents"],"mappings":"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","file":"static/js/src-components-abbr-abbr~src-components-editor-editor~src-components-enhanced-select-enhanced-select~380939a1.3f0f5c18.js","sourcesContent":["import * as React from 'react';\nimport H from 'highlight.js';\nimport './Highlight.scss';\n\nconst highlight = (code: string) => {\n  return H.highlightAuto(code, ['typescript']).value;\n};\n\nexport function Highlight(props) {\n  const { code } = props;\n\n  return (\n    <pre className=\"oned-highlight\">\n      <code>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: highlight(code),\n          }}\n        />\n      </code>\n    </pre>\n  );\n}\ntry {\n    // @ts-ignore\n    Highlight.displayName = \"Highlight\";\n    // @ts-ignore\n    Highlight.__docgenInfo = { \"description\": \"\", \"displayName\": \"Highlight\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"../src/react-docs/Highlight.tsx#Highlight\"] = { docgenInfo: Highlight.__docgenInfo, name: \"Highlight\", path: \"../src/react-docs/Highlight.tsx#Highlight\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import * as React from 'react';\nimport '../components/styles/index';\nimport { withMDXComponents } from '@mdx-js/tag/dist/mdx-provider';\nimport { StatusBoundary } from '../components/StatusBoundary/StatusBoundary';\nimport * as classNames from 'classnames';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport LZString from 'lz-string';\nimport { Icon, Tooltip } from 'antd';\nimport { Highlight } from './Highlight';\nimport './Playground.scss';\n\nexport class PlaygroundProps {\n  components: any;\n  className: string;\n  style: string;\n  children: object;\n  /** 第几个组件 */\n  // tslint:disable-next-line:variable-name\n  __position: number;\n  /** 子级的代码 */\n  // tslint:disable-next-line:variable-name\n  __code?: string;\n  /** import 进来的上下文 */\n  // tslint:disable-next-line:variable-name\n  __scope: object;\n  /** 父级声明的源码 */\n  demo: {\n    default: any;\n    code: string;\n  };\n  title = '这是title';\n  description = '这是描述';\n}\n\nfunction compress(str) {\n  return LZString.compressToBase64(str)\n    .replace(/\\+/g, '-') // Convert '+' to '-'\n    .replace(/\\//g, '_') // Convert '/' to '_'\n    .replace(/=+$/, ''); // Remove ending '='\n}\n\nclass State {\n  codeExpand = false;\n  copied = false;\n  copyTooltipVisible = false;\n}\n\nclass BasePlayground extends React.Component<PlaygroundProps, any> {\n  static defaultProps = new PlaygroundProps();\n\n  state = new State();\n\n  handleCodeExpand = () => {\n    const { codeExpand } = this.state;\n    this.setState({ codeExpand: !codeExpand });\n  };\n\n  getSanboxConfig() {\n    const { style, demo, children, __code } = this.props;\n\n    const code = (demo && demo.code) || __code;\n    const dependencies = code.split('\\n').reduce(\n      (acc, line) => {\n        const matches = line.match(/import .+? from '(.+)';$/);\n        if (matches && matches[1]) {\n          acc[matches[1]] = 'latest';\n        }\n        return acc;\n      },\n      {\n        react: '^16.2.0',\n        'react-dom': '^16.2.0',\n        'react-scripts-ts': '2.13.0',\n        antd: 'latest',\n        'oned-react': 'latest',\n      }\n    );\n    const html = `\n    <!doctype html>\n    <html lang=\"en\">\n    \n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n      <meta name=\"theme-color\" content=\"#000000\">\n      <title>OneDesign Demo</title>\n    </head>\n    \n    <body>\n      <div id=\"root\"></div>\n    </body>\n    \n    </html>\n    `;\n\n    return {\n      files: {\n        'package.json': {\n          content: {\n            private: true,\n            main: 'index.tsx',\n            dependencies,\n            scripts: {\n              start: 'react-scripts-ts start',\n              build: 'react-scripts-ts build',\n              test: 'react-scripts-ts test --env=jsdom',\n              eject: 'react-scripts-ts eject',\n            },\n            devDependencies: {\n              '@types/jest': '^22.1.3',\n              '@types/node': '^9.4.6',\n              '@types/react': '16.0.38',\n              '@types/react-dom': '16.0.4',\n              typescript: '^2.7.2',\n            },\n          },\n        },\n        'index.tsx': {\n          content: `\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport 'antd/dist/antd.css';\n// import './index.css';\n${code}\n\nrender(<div>test</div>, document.getElementById(\\'root\\'));\n          `,\n        },\n        'index.html': {\n          content: html,\n        },\n      },\n    };\n  }\n\n  handleCodeCopied = () => {\n    this.setState({ copied: true });\n  };\n\n  onCopyTooltipVisibleChange = (visible: boolean) => {\n    if (visible) {\n      this.setState({\n        copyTooltipVisible: visible,\n        copied: false,\n      });\n      return;\n    }\n\n    this.setState({\n      copyTooltipVisible: visible,\n    });\n  };\n\n  render() {\n    const { demo, style, className, __position, title, description, __code, children } = this.props;\n    const { codeExpand } = this.state;\n    const codeBoxClass = classNames({\n      'code-box': true,\n      expand: codeExpand,\n    });\n    const code = (demo && demo.code) || __code;\n    const highlightClass = classNames({\n      'highlight-wrapper': true,\n      'highlight-wrapper-expand': codeExpand,\n    });\n\n    return (\n      <section className={codeBoxClass}>\n        <section className=\"code-box-demo\">\n          <StatusBoundary>\n            <div>{(demo && demo.default) || children}</div>\n          </StatusBoundary>\n          {style ? <style dangerouslySetInnerHTML={{ __html: style }} /> : null}\n        </section>\n        <section className=\"code-box-meta markdown\">\n          <div className=\"code-box-title\">\n            <a href={`#demo-${__position}`}>{title}</a>\n          </div>\n          <div className=\"code-box-meta markdown\">{description}</div>\n          <span className=\"code-expand-icon\">\n            <img\n              alt=\"expand code\"\n              src=\"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg\"\n              className={codeExpand ? 'code-expand-icon-hide' : 'code-expand-icon-show'}\n              onClick={this.handleCodeExpand}\n            />\n            <img\n              alt=\"expand code\"\n              src=\"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg\"\n              className={codeExpand ? 'code-expand-icon-show' : 'code-expand-icon-hide'}\n              onClick={this.handleCodeExpand}\n            />\n          </span>\n        </section>\n        <section className={highlightClass} key=\"code\">\n          <div className=\"highlight\">\n            <div className=\"code-box-actions\">\n              <form action=\"https://codesandbox.io/api/v1/sandboxes/define\" method=\"POST\" target=\"_blank\">\n                <input type=\"hidden\" name=\"parameters\" value={compress(JSON.stringify(this.getSanboxConfig()))} />\n                <input type=\"submit\" value=\"Create New Sandbox with Prefilled Data\" className=\"code-box-codesandbox\" />\n              </form>\n              <CopyToClipboard text={code} onCopy={this.handleCodeCopied}>\n                <Tooltip\n                  visible={this.state.copyTooltipVisible}\n                  onVisibleChange={this.onCopyTooltipVisibleChange}\n                  title={this.state.copied ? 'copied' : 'copy'}>\n                  <Icon type={this.state.copied ? 'check' : 'copy'} className=\"code-box-code-copy\" />\n                </Tooltip>\n              </CopyToClipboard>\n            </div>\n            <Highlight code={code} />\n          </div>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport const Playground = withMDXComponents(BasePlayground);\n"],"sourceRoot":""}